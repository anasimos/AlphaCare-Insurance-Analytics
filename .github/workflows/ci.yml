name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Add DVC installation here
          pip install dvc

      - name: Setup DVC Local Remote
        run: |
          # DVC needs to be initialized in the workspace
          dvc init --no-scm # --no-scm to not initialize a git repo inside DVC's scope if it's already a git repo
          # Set up the local DVC remote
          # IMPORTANT: Adjust /home/runner/work/your-repo-name/your-repo-name/dvc_storage
          # to a path outside the repository if you prefer, or a consistent location.
          # For a CI runner, /tmp/dvc_cache is often used for temporary storage.
          mkdir -p /tmp/dvc_cache # Create a temporary directory for DVC cache
          dvc remote add -d localstorage /tmp/dvc_cache

      - name: Pull DVC-tracked Data
        run: |
          # Pull the actual data files associated with the .dvc files
          dvc pull

      # You can add further steps here, e.g., to run tests or linting
      # - name: Run tests
      #   run: |
      #     pytest

      # - name: Run ML Script (Optional, for full pipeline validation)
      #   run: |
      #     python scripts/ml_modeling.py # Adjust path to your ML script